
pkt_num <- fresh_symbolic "pkt_num" {| [ADDR_WID] |};
pkt_arr <- fresh_symbolic "pkt_arr" {| [PKT_DATA_NUM][PKT_DATA_WID] |};
syn_arr <- fresh_symbolic "syn_arr" {| [SYN_VAR_NUM][32] |}; 

let con_pkt_num = {{ ((((pkt_num - 1) && `(PKT_DATA_NUM)) + 1) >> 1) << 1 }};
let con_syn_arr = {{ [0, syn_arr@1] }};

let allocs = [ ("pkt_arr", PKT_DATA_NUM), ("TX_FIFO_BUFF", PHY_DATA_NUM), ("syn_arr", SYN_VAR_NUM) ];
let inputs = [ ("*pkt_arr", pkt_arr, PKT_DATA_NUM), ("pkt_num", con_pkt_num, 1), ("*syn_arr", con_syn_arr, SYN_VAR_NUM) ];
let output = [ ("*TX_FIFO_BUFF", PHY_DATA_NUM) ];

print (str_concat "SymExec w/ PKT_DATA_NUM = " (show ( PKT_DATA_NUM )));
term_template <- time (llvm_symexec llvm_module_template "LmacTxTemplate" allocs inputs output true);
file_name <- (str_concat (str_concat "archive_lmac_template_two_" (show PKT_DATA_NUM)) ".core");
write_core file_name term_template;

